name: Deploy

on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          include-hidden-files: true
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/.env

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ${{ github.workspace }}

      - name: Copy .env
        run: |
          cp .env.prod .env
          sed -i "s|{API_BASE_URI}|$API_BASE_URI|g" .env
        env:
          API_BASE_URI: ${{ secrets.API_BASE_URI }}

      - name: Set up SSH private key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/id_rsa
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Configure SSH
        run: |
          touch ~/.ssh/config
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          touch ~/.ssh/known_hosts
          echo "$SSH_HOST $SSH_KEY" > ~/.ssh/known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Copy build to VPS
        if: ${{ success() }}
        run: |
          rsync -avz --progress --delete -e "ssh -i ~/.ssh/id_rsa" ${{ github.workspace }}  ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/html/it-web/

      - name: Deploy to Server
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 22
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf /var/www/html/it-web/src
            mv /var/www/html/it-web/it-web /var/www/html/it-web/src
            cd /var/www/html/it-web/src
            echo "$USER" > user.log
            echo "$SHELL" > shell.log
            fnm env
            fnm use
            npm i -g pm2
            pm2 restart nvnahn0810-it-web
